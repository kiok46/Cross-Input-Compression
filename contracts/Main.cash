pragma cashscript 0.11.4;

contract Main(bytes20 lpPKH, bytes35 tradeLockingBytecode) {
  function withdraw(pubkey pk, sig s) {
    require(hash160(pk) == lpPKH);
    require(checkSig(s, pk));
  }

  function trade() {
    // Approach 1: Using a static index
    require(tx.inputs[0].lockingBytecode == tradeLockingBytecode);

    // Approach 2: Expect the index from unlockingbytecode i.e function trade(int idx) {

    // Approach 3: Search for index

    // int inputs = tx.inputs.length;
    // bool found = false;
    // for(int idx = 0; idx < inputs; idx++) {
    //   if(tx.inputs[idx].lockingBytecode == tradeLockingBytecode) {
    //     found = true;
    //     break;
    //   }
    // }
    // require(found);
  }
}